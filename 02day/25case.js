//通过require既可以加载系统模块，也可以加载文件性模块

//关于require的使用一些细节

//使用不同的参数，其执行结果不用


//1、当传入一个字符不以 ./或 ../ 开头语

//会自动当成系统模块进行加载

//以往路径不写. 会默认成./(即当前)来解析

//require('23cart.js');


// 2、nodejs 会自动将.js和.json 结尾文件视模块
//所以在使用require加载模块 时，可以省略js.后缀

//关于require加载模块，还可以分成更多情况

//当目录中存在node_moculse 这样一个特殊目录时

//在使用require时，如果没有使用./或../（相对路径

//会优先去node_modules 下查找，如果查不到再查找父级目录

//有没有node_modules 如果存在，则在父级的node_modules
//下查找，如果父级没有node_modules再找父级......如果一直未找到node_modules
//才会认为是系统模块

// 4、也可以将模块拆分成若干个小文件，将这些相关小文件放到同一个目录下
//那么这个目录便认为是一个模块


//如果在加载模块时，nodejs可以省略后缀，这样就会导致歧义产生
//例如 ./cart 既可以理解成./cart这个目录也可以理解成./cart.js
//遇到这样情况式，node.js会优先当成目录来对待
//再去查找目录中有没有index.js

//如果没有找到 则表明当成目录加载失败，再 尝试加载文件

require('./cart');


//当将多个文件放到一个同一目录下时，需要对此模块进行说明
//通常将模块形象的成为包，当需要对包(模块)进行说明时
//需要一个通过一个文件进行说明，称为包描述文件
//并且这个文件的固定名字为pack.json
//在这个描述文件中可以写任意内容 只要符合json语法
//但是有几项是必须的，列如 版本 名称 作者

//这个文件可以手工创建也可以通过命令进行创建
//当使用命令创建时 需要在报的根目录 执行 npm init 即可

